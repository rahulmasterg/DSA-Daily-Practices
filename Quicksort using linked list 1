import java.util.*;

class Main {

    public static int partition(LinkedList<Integer> list, int low, int high) {
        int pivot = list.get(high);
        int i = low - 1;

        for (int j = low; j < high; j++) {
            if (list.get(j) < pivot) {
                i++;

                int temp = list.get(i);
                list.set(i, list.get(j));
                list.set(j, temp);
            }
        }
        // Swap with pivot
        i++;
        int temp = list.get(i);
        list.set(i, list.get(high));
        list.set(high, temp);

        return i;
    }

    public static void quickSort(LinkedList<Integer> list, int low, int high) {
        if (low < high) {
            int pi = partition(list, low, high);

            quickSort(list, low, pi - 1);
            quickSort(list, pi + 1, high);
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        LinkedList<Integer> linkedList = new LinkedList<>();

        for (int i = 0; i < n; i++) {
            linkedList.add(sc.nextInt());
        }

        quickSort(linkedList, 0, n - 1);

        for (int i : linkedList) {
            System.out.print(i + " ");
        }
    }
}
